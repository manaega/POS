import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

abstract class POS {
    protected List<Item> goodSht;

    public POS() {
        this.goodSht = new ArrayList<>();
        initializeGoodSht();
    }

    public abstract void processTransaction();

    protected void printReceipt(List<Item> naGet) {
        System.out.println("----- Receipt -----");
        double total = 0.0;
        for (Item item : naGet) {
            System.out.printf("%s - ₱%.2f\n", item.getName(), item.getPrice());
            total += item.getPrice();
        }
        System.out.printf("Total: ₱%.2f\n", total);
        System.out.println("-------------------");
    }

    private void initializeGoodSht() {
        goodSht.add(new Item("Alfonso", 290));
        goodSht.add(new Item("Gin", 75));
        goodSht.add(new Item("Dildo", 150));
        goodSht.add(new Item("Emperador", 200));
        goodSht.add(new Item("Red Horse", 100));
    }

    public void displayGoodSht() {
        System.out.println("Available Goods:");
        for (int i = 0; i < goodSht.size(); i++) {
            Item item = goodSht.get(i);
            System.out.printf("%d: %s - ₱%.2f\n", i + 1, item.getName(), item.getPrice());
        }
    }

    public Item getItem(int index) {
        if (index >= 0 && index < goodSht.size()) {
            return goodSht.get(index);
        }
        return null;
    }
}

class Item {
    private String name;
    private double price;

    public Item(String name, double price) {
        this.name = name;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public double getPrice() {
        return price;
    }
}

class SimplePOS extends POS {

    @Override
    public void processTransaction() {
        Scanner scanner = new Scanner(System.in);
        List<Item> naGet = new ArrayList<>();
        boolean purchasing = true;

        while (purchasing) {
            displayGoodSht();
            System.out.print("Enter the item number to purchase (0 to finish): ");
            int choice = scanner.nextInt();

            if (choice == 0) {
                purchasing = false;
            } else {
                Item addToCart = getItem(choice - 1);
                if (addToCart != null) {
                    naGet.add(addToCart);
                    System.out.println("Added " + addToCart.getName() + " to your cart.");
                } else {
                    System.out.println("Invalid item number. Please try again.");
                }
            }
        }

        printReceipt(naGet);
    }
}

public class Main {
    public static void main(String[] args) {
        SimplePOS pos = new SimplePOS();
        pos.processTransaction();
    }
}
